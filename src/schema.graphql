type Query {
    getAllProducts(inStock: Boolean): [Product!]!
    getProductByTitle(title: String!): [Product]!
    getProductsByPriceRange(min: Float!, max: Float!): [Product]!
    getCart: Cart
}

type Mutation {
    createCart: Cart!
    addProductToCart(title: String!): Cart
    completeCart: Cart
    signUp(username: String!, password: String!): AuthPayload
    logIn(username: String!, password: String!): AuthPayload
    logOut: AuthPayload
}

type Product {
    title: String!
    price: Float!
    inventory_count: Int!
}

type Cart {
    productsInCart: [Product]!
    totalAmount: Float!
}

type AuthPayload {
    user: User
    message: String
    token: String
}

type User {
    id: String!
    username: String!
    password: String!
    cart: Cart
}